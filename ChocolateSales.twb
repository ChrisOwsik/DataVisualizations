<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <ParameterDefaultValues />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SavingAnalyticObjects />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='2022ChocolateSalesDataVisualizations' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='ChocolateGroups' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Milk Chocolate&quot;'>
        <calculation class='tableau' formula='&quot;Milk Chocolate&quot;' />
        <members>
          <member value='&quot;Dark Chocolate&quot;' />
          <member value='&quot;Fruit/Nut Chocolate Bars&quot;' />
          <member value='&quot;Milk Chocolate&quot;' />
          <member value='&quot;White Chocolate&quot;' />
        </members>
      </column>
      <column caption='Select a Country' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[Country]' type='nominal' value='&quot;UK&quot;'>
        <calculation class='tableau' formula='&quot;UK&quot;' />
      </column>
      <column caption='Select a Metric' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='7.0'>
        <calculation class='tableau' formula='7.0' />
        <range max='22050.0' min='7.0' />
      </column>
    </datasource>
    <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' inline='true' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Chocolate_Sales_Cleaned' name='excel-direct.00eqf4n05y9dfc1086u3k06z9l7x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/Downloads/IS460/Tableau/Assignment/Dataset/Chocolate_Sales_Cleaned.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.00eqf4n05y9dfc1086u3k06z9l7x' name='Chocolate_Sales_Cleaned' table='[Chocolate_Sales_Cleaned$]' type='table'>
          <columns gridOrigin='A1:F1095:no:A1:F1095:0' header='yes' outcome='6'>
            <column datatype='string' name='Sales Person' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Product' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='integer' name='Amount' ordinal='4' />
            <column datatype='integer' name='Boxes Shipped' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1095:no:A1:F1095:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Boxes Shipped</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Boxes Shipped]</local-name>
            <parent-name>[Chocolate_Sales_Cleaned]</parent-name>
            <remote-alias>Boxes Shipped</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Boxes Shipped]' role='measure' type='quantitative' />
      <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Chocolate_Sales_Cleaned' datatype='table' name='[__tableau_internal_object_id__].[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]' role='measure' type='quantitative' />
      <column-instance column='[Boxes Shipped]' derivation='Avg' name='[avg:Boxes Shipped:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Amount]' derivation='Count' name='[cnt:Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Amount]' derivation='Sum' name='[cum:sum:Amount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Amount]' derivation='Sum' name='[diff:cum:sum:Amount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Amount]' derivation='Sum' name='[pcto:cum:sum:Amount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Boxes Shipped]' derivation='Sum' name='[sum:Boxes Shipped:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Admin/Documents/My Tableau Repository/Datasources/Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/30/2025 07:06:58 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' increment-value='%null%' refresh-type='create' rows-inserted='1094' timestamp-start='2025-04-30 19:06:57.818' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Sales Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sales Person]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales Person</remote-alias>
              <ordinal>0</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>2</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amount</remote-alias>
              <ordinal>4</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>813</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Boxes Shipped</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Boxes Shipped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Boxes Shipped</remote-alias>
              <ordinal>5</ordinal>
              <family>Chocolate_Sales_Cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>381</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[cnt:Amount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[cum:sum:Amount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[diff:cum:sum:Amount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[avg:Boxes Shipped:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{2f925455-b109-4741-82d0-4d6a002fa776}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
            <field name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <object-graph>
        <objects>
          <object caption='Chocolate_Sales_Cleaned' id='Chocolate!Sales!Cleaned_F98F31EDBA914B979A8074F3C7AE8501'>
            <properties context=''>
              <relation connection='excel-direct.00eqf4n05y9dfc1086u3k06z9l7x' name='Chocolate_Sales_Cleaned' table='[Chocolate_Sales_Cleaned$]' type='table'>
                <columns gridOrigin='A1:F1095:no:A1:F1095:0' header='yes' outcome='6'>
                  <column datatype='string' name='Sales Person' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Product' ordinal='2' />
                  <column datatype='date' name='Date' ordinal='3' />
                  <column datatype='integer' name='Amount' ordinal='4' />
                  <column datatype='integer' name='Boxes Shipped' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Chocolate Sales by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1140818085495455744:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' />
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]</rows>
        <cols>([federated.0apgapt0q9uvtm11h0s0c141s4j7].[yr:Date:ok] / [federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{12884294-8BF1-41FD-916C-E78AB9501E42}' />
    </worksheet>
    <worksheet name='ClusterAnalysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{2f925455-b109-4741-82d0-4d6a002fa776}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Boxes Shipped]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Boxes Shipped]' derivation='Sum' name='[sum:Boxes Shipped:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1140818085495455744:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</rows>
        <cols>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]</cols>
      </table>
      <simple-id uuid='{5BB34E04-F2B5-483F-8A91-29DDC767D4B9}' />
    </worksheet>
    <worksheet name='DualAxisChart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Chocolate Sales and Boxes Shipped by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Boxes Shipped]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Boxes Shipped]' derivation='Sum' name='[sum:Boxes Shipped:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[mn:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1140818085495455744:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='vertical-align' data-class='total' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' value='center' />
            <format attr='text-align' data-class='total' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' value='right' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' />
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk] + [federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Boxes Shipped:qk])</rows>
        <cols>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{C3278D33-02B8-4257-AB68-3D3D3539EE17}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Heatmap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[mn:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1140818085495455744:nk]' member='&quot;Dark Chocolate&quot;' />
              <groupfilter function='member' level='[none:Calculation_1140818085495455744:nk]' member='&quot;Milk Chocolate&quot;' />
              <groupfilter function='member' level='[none:Calculation_1140818085495455744:nk]' member='&quot;White Chocolate&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</rows>
        <cols>([federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk] / [federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk])</cols>
      </table>
      <simple-id uuid='{F0D51E50-B4A4-4BC4-9B4C-0BAE295E9D94}' />
    </worksheet>
    <worksheet name='Pareto'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pareto Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[pcto:cum:sum:Amount:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[mn:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1140818085495455744:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' scope='rows' value='Sales ($)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='vertical-align' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' value='top' />
            <format attr='text-align' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' value='center' />
            <format attr='text-format' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' value='p0%' />
            <format attr='font-size' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' value='8' />
            <format attr='font-size' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' value='8' />
            <format attr='text-format' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk] + [federated.0apgapt0q9uvtm11h0s0c141s4j7].[pcto:cum:sum:Amount:qk])</rows>
        <cols>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</cols>
      </table>
      <simple-id uuid='{D3AE7C48-9D27-47CF-BD0C-59966EF277C4}' />
    </worksheet>
    <worksheet name='SalesMap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
            <column caption='Sales' datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1140818085495455744:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</column>
            <column>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' />
              <text column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
              <lod column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' />
              <color column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' />
              <geometry column='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[Latitude (generated)]</rows>
        <cols>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F958E09-E75C-49A6-B906-15113FADC295}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#9d7660'>2022 Chocolate Sales Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Chocolate_Sales_Cleaned (Chocolate_Sales_Cleaned)' name='federated.0apgapt0q9uvtm11h0s0c141s4j7' />
      </datasources>
      <datasource-dependencies datasource='federated.0apgapt0q9uvtm11h0s0c141s4j7'>
        <column caption='Chocolate Types' datatype='string' name='[Calculation_1140818085495455744]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([Product], &quot;Dark&quot;) THEN &quot;Dark Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;Milk&quot;) THEN &quot;Milk Chocolate&quot;&#13;&#10;ELSEIF CONTAINS([Product], &quot;White&quot;) THEN &quot;White Chocolate&quot;&#13;&#10;ELSE &quot;Fruit/Nut Chocolate Bars&quot;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Calculation_1140818085495455744]' derivation='None' name='[none:Calculation_1140818085495455744:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='21' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone fixed-size='24' h='3716' id='22' is-fixed='true' type-v2='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94426' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='4645'>
              <zone h='94426' id='5' type-v2='layout-basic' w='89378' x='483' y='4645'>
                <zone h='47209' id='16' name='Pareto' w='44691' x='45170' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47209' id='32' name='Chocolate Sales by Month' w='35030' x='483' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47209' id='35' name='Chocolate Sales by Month' pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type-v2='color' w='9657' x='35513' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47217' id='39' name='DualAxisChart' w='44687' x='483' y='51854'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38503' id='44' name='Heatmap' w='44691' x='45170' y='51854'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8714' id='46' name='Heatmap' pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' type-v2='color' w='44691' x='45170' y='90357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='94426' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='4645'>
                <zone h='22880' id='34' name='Chocolate Sales by Month' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17538' id='40' name='DualAxisChart' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' type-v2='filter' w='9656' x='89861' y='27525'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28223' id='41' name='DualAxisChart' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' type-v2='filter' w='9656' x='89861' y='45063'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#9d7660'>2022 Chocolate Sales Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='57' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='24' h='3716' id='22' type-v2='title' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22880' id='34' mode='checkdropdown' name='Chocolate Sales by Month' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47209' id='32' is-fixed='true' name='Chocolate Sales by Month' w='35030' x='483' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='47209' id='35' name='Chocolate Sales by Month' pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type-v2='color' w='9657' x='35513' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47209' id='16' is-fixed='true' name='Pareto' w='44691' x='45170' y='4645'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17538' id='40' mode='checkdropdown' name='DualAxisChart' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' type-v2='filter' w='9656' x='89861' y='27525'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28223' id='41' mode='checkdropdown' name='DualAxisChart' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' type-v2='filter' w='9656' x='89861' y='45063'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47217' id='39' is-fixed='true' name='DualAxisChart' w='44687' x='483' y='51854'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38503' id='44' is-fixed='true' name='Heatmap' w='44691' x='45170' y='51854'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8714' id='46' name='Heatmap' pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' type-v2='color' w='44691' x='45170' y='90357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2EB4C194-7877-481D-9F54-2861851B36AA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Chocolate Sales by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' type='filter' />
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AC53073-8C32-445A-A624-6605C8E5A877}' />
    </window>
    <window class='worksheet' name='ClusterAnalysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{428EDF75-FB2F-4ECF-88B8-07232E22667E}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFB50274-BDE9-4B10-8EEF-8A86A11EF45C}' />
    </window>
    <window class='worksheet' name='SalesMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[sum:Amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4BD4DBD-43F1-42DD-B5B0-70899D50C913}' />
    </window>
    <window class='worksheet' name='DualAxisChart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' type='filter' />
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6CDA151B-BED1-4F6C-8F72-14E99FBAA53A}' />
    </window>
    <window class='worksheet' name='Pareto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]' type='filter' />
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]' type='filter' />
            <card param='[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[mn:Date:ok]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Calculation_1140818085495455744:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Country:nk]</field>
            <field>[federated.0apgapt0q9uvtm11h0s0c141s4j7].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AC4152D5-59B8-47EE-92A3-4322DA897D24}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Chocolate Sales by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DualAxisChart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pareto'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='44' />
      <simple-id uuid='{87D8D243-4C4C-40A4-872B-295AADFF2AAA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Chocolate Sales by Month' width='192'>
      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
      x6LsTHGm6mwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ClusterAnalysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAN90lEQVR4nO3dyW8baXrH8W9VcRUpaqf2zZKXdqcxSDA55Bqg7/lDEiRArjnkkj8htwFy
      mGNuAQYIBlkmCJJBB17G7fHSbluSJUoiKVEUl2IVWVVv5eAtTrttVYky2XyfD2DACx8+b7X5
      c72sIp82wjAMEUJT5qAXIMQgSQCE1iQAQmsSAKE1CYDQmgRAaO2zByAMQ6JeeVVKRe4RtSbq
      4+PUjEqPODWfa11RjWQA3vS56h7D+CKQAEQjWyChtcRAugYBYYR0h0FAlH/PwzAkVCrSWSBq
      j1jrGpEecWo+17qiGkgAjv7yr1Bn9UG0FuI9sgUSWpMACK1JAITWJABCaxIAoTUJgNCaBEBo
      TQIgtHbhAAQ9m3//j/8iDBWe5+N5Hr2uQ8vucPD8OWctG9/r4bhdWs0GPc/n+fNn1Ot1fN/j
      vNFEvn0shs2F7wRXD0sszU9zarepHdSBDp7TJD25RK9+hjUzy969h2zevMWzR98SpCeYzqco
      VyqYvsPde3fZ+sM/ZW02e4WHI0Q0FzwDhJw22iSSSaqlQ5r1Mif1JvMLi1SOSuQnxnE6LlNz
      C2QNDyM7gWW8++e+elpjaXmRrtO9osMQIh7jYmNRQpQKMU0TpdSrD7IZJoYREoZgmgaBCrHM
      V3kKggDTfJctAwiUwrQsCEOO/vwv5LNAYihccAtkYJoGwKsXtvnDE0fC+j8/T/zwaROva5S8
      ERBDRK4CCa1JAITWJABCaxIAoTUJgNCaBEBoTQIgtHbBG2H9o5QiOK1BePGpEEEQYFnWpx/4
      RggqVO/djOt7jxg1o9JjmNcV1UACAER6cfq+/8Gbaz/mzWS4KP/xovaIUzMqPYZ5XVHJFkho
      TQIgtCYBEFqTAAitSQCE1gYyG/Sv//7X1FvuhR8f8uo7BVEeT4yaKI+PUzMqPeLUfK51RTWQ
      ADRsl3r74gEQ4qrIFkhoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKG1WAFQfo/ff/uA3YPjTz62
      eniIF6eJEJ9BrBth7XqFqcUtlufyvHjyO56+rLO1USTsdcjOXqP07D6Z6WXSqoNtB2ynDe5+
      c4cv/+RrlibT/T4GIWKLdQbI5MapVUrU6g1ajsdkOoFKj/HFrS2apyfkZ5YIuh2MRIr8WIbq
      6Rkb60u0W06/1y/EpcQ6A6TGJtneMPFCi+vXbxCEFulsGhImt74Yp91qkR3LEfpdPGUylknQ
      7rjkcuP9Xr8QlxL7s0Bj+cIHfz+VtJienn79q3fbnalUBnj3lUghhoFcBRJakwAIrUkAhNYk
      AEJrEgChNQmA0JoEQGhtIKMRvzuo4QdRZoMqLCtCVmPNBo3YI0bNqPQY5nVFJbNBY/aIUzMq
      PYZ5XVHJFkhoTQIgtCYBEFqTAAitSQCE1gYyGvHvfvmfNOzuxQtGZXjlqPSIUzOkw0EHEoDd
      4zq1pswGFYMnWyChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITW+haAw8PSD36vUqnQbrX4rJ+3
      FiKCvt0Ia7ValPae02i1GZuap3laoRuaTBdyzPsOT54+Y/32HzM3nuxXSyEura9bIGVa3Lix
      hdNqUpheZDybwvM8qien5DImZ+d2P9sJcWl9OwOsrq5hWSZWMsnm5ibnJ8eMzy+RTVlY+FTr
      BWZnZDaoGC59C0Aul3v782wGsqvr7/35Wm4CkNmgYrjIVSChNQmA0JoEQGhNAiC0JgEQWpMA
      CK1JAITWBjIa8bePSnS9IFJNlFGKAKFSGBFq4vSIWjMqPYZ5XVHJbNCYPeLUjEqPYV5XVLIF
      ElqTAAitSQCE1iQAQmsSAKG1gYxG7Pzyzwjtk4sXjMrsylHpEadGZoO+E3Zt6LYG0VqI98gW
      SGhNAiC0JgEQWpMACK1JAITWJABCaxIAobX3ArD79AGHp012d3YIQ4XvByilCJVChSFKhXiu
      zZNH33LnwWNUEBAohVIBfhBwvP8Sxw/wfZ8wDAmCgCAICENF9/yIo4Y3qOMU4oPeuxFmpMex
      a8cESvHo/v+ws19m7fotxi0PL1UgZVpc21ghP5ZlZX6F3/zLP+Onp7i5PMH9xwd89eUWY12b
      b37730wtXafbrmIk88zmEnQ752TXZgd1nEJ80A+2QEvFSY5OGmCl+OpnP2N1dpwT18Kp7DFZ
      XMCulymfd+k5Hcan5vjixhbnbYeFQo4e0Dw7ZWZpjcB1mZ1fZmYyjxcocmPZARyeEB/33jfC
      fN/Hsixc1yWVtGjZLhPjebqejxEqUpkMQa9Ls22TTGVImiEBFpYR4AcG6XQSyzJpt20ymSym
      abxuoui4XbJjeUwjxP7F12BXBnbQQrwxkK9ESgDEsJCrQEJrEgChNQmA0JoEQGhNAiC0JgEQ
      WpMACK0N5D6AOnmCofwL1wSBwrIuntUwBBUqrAjjF6P2iFMzKj2GeV1RyWzQmD3i1IxKj2Fe
      V1SyBRJakwAIrUkAhNYkAEJrEgChtYGMRvzbf/gN53b34gWjMrtyVHrEqZHZoO+UTprUmu4g
      WgvxHtkCCa1JAITWJABCaxIAoTUJgNCaBEBoTQIgtHZl9wGOD0rMrq5QPtgnmUyST5k45jgz
      hcxVtRQisisLQKfdJgRs2yb0XQ56Fj//o3nC198HEGIYXNkWaCxtcnbewvcVmVyBmZxF05Hp
      0GK4XNkZYGFzm8ODfTa3b2ARkE6n6HRc4OLf0hLiql1ZAAzDZGVt4/WvkgDkcmNvvxIpxDCQ
      q0BCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitDWQ04p3vjuj5F78foAKFGWVG5OvZoFHGL0bu
      EaNmVHoM87qiktmgMXvEqRmVHsO8rqhkCyS0JgEQWpMACK1JAITWJABCawO5CuT++m/APb9w
      TRiGGEbEIZER50rG6RG1ZlR6DPO6ohrIbNBg/xuwK4NoLcR7ZAsktCYBEFqTAAitSQCE1iQA
      QmsSAKE1CYDQWp/vA/iUy3UmxkzavZByucJMcZGZnMHLss2NrZX+thPikvocAMV5vUnWsKid
      e3SVwfTUBMcvX9Dz+9tJiH7ocwBMgqCH61qMzyyyOZ7g0e8f4TtNTBSV5gZz+YHcfBbig/r8
      akwwP1ug1TNYzlvs7r5ka3sTsCjkUrTtbv9bCnEJA/kwnP2Lr+WzQGIoyFUgoTUJgNCaBEBo
      TQIgtCYBEFqTAAitSQCE1gZyH8B7+I8YnnPxmlBhGhfPakhIGIaRaqL2iFMzKj2GeV1RyWzQ
      mD3i1IxKj2FeV1SyBRJaG9gHc6KeeKI8PgzDtz+uck1xakalR5yaz7WuKAYSgKgvzjdbmqii
      1MTpEbVmVHoM87qi+uwBMAzj7Y8oNVHeM7wJWJSaqD3i1IxKj2FeV1Sf/U2wEMNkIFsgz23z
      3fc7zK9uYQQOqtdlsrhEyoo3B9K1G7wonXB7e52nT58yPrNIwm9z1vZYX5pBJfM06zWWlxZj
      r7l1fsr+YZni4hqNaolEborxlOLopMnNa4s0VY5uo8ry8nLsHk6rzu7BEZOzi/SaVTwrx0Ih
      xe7hCde3N7A9g277/FI9AM4qL2mrAmbvjFbXYGNxiud7JdY2tvC8Lp7bobiwhGXGn8u58+wJ
      XSPDerHA8/0jNrauU9nfIZmbJj+WIJ+2sIMUMxO52D1qlSOqjQ4by0Ve7OyxsLxG5XCf6YVV
      kmaAGXhkJouMpX78auBArgJVD4/ZvP0HnFeP2X32mJrtx37xAxhWGjP0aJ5WmFnZwmnWaHV8
      5gtpqidV7t67T35y9lJrzhWmWZ6fon5aJpmbI3DanDY6XF+fpVw65M7duyRzk5fqkcmNk0qY
      uG4DT+VIei77tSZf3V6ntFfi4YP7qMTYpXqEvku1Vse2Wzhdk4Kh2Dk+4dbtG1SPjnj2+AF2
      YF3qxQ/QareAkOPqGbdvb7P//BmpfJHAaVEpH/L4+xJThfgvflC8eLGD8n2OD8ts3f6S7+89
      Yun6bdr1U0ovX3B42iKb/Pil8IEEwLLAdVx8BZMzs/iuw2U2YulM5vXzmriuix8ofN+n2+th
      JZLMzU7TbtuXWnPj9JjzboLN1Xl6XhfP91GBj+u4mIkExWIR+5I9PC9geWWFVqOJ73fp+T5G
      4OM4DkYiwVyxSKfdvlSPWrWK5/scV0/x/R5d3yOBwnEcQsNiZq6I225f6u8DFNs3vyLRaeOG
      Aa7jYiSSr84uvk86myeXAtcLLtHDIJMvsDiZoWE7OI6DmYCO4+AHivzENPhd1CcOZCDvAVTg
      sbuzy+LaNQLPJUEAqTzZj5yqPqZWOeKoWmNpdYNOvUp+dpGE36HW7rE0N4GysjjtBpNTU1Em
      pv+/HodUak2Kiyt47RqJ/DT5hOLwtMm15VlslcZ3mpfq4dpN9g6OWFhZx2vX8M0xZgspdktV
      ttaX6fjgu51L9QBA9WjYAWG3QbNnsjxXYGevxNrGBr1eD/wemXyBZOz/Q2NIubRPlzTLxQl2
      Xx6xvrlB7fiARH6GTNIgl0nR7PSYLORjH4bdPOO41mZjdYGXuy9ZWtugUtpjemEVI/TJWCEu
      GcazyR99DnkTLLQmd4KF1iQAQmsSAPGT1HU7NFrtt58oCMOAbteL/DwSAPET5PGrf/oVB6Uj
      Oq06d+89wLbL/Ou/3eHRg9/R7Lg8efiAWrPzyWeSKVXiJyjB9rVldnf2yKcU5b2HtLxtnj96
      TMtfYu+wTMe2+fn0IjOFj983kTOA+OlRAb4y8V2X4+MjshNTZFNpVleLpK0kt764yXJxmt29
      g08+lVwGFVqTM4DQ2v8C/JP8PgRLEt0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AUvt3t0sFxwEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DualAxisChart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heatmap' width='192'>
      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
      o7VbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pareto' width='192'>
      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
      VEh4Ff3lAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SalesMap' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
